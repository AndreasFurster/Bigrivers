

/*//////////////////////////////////////////////////////////////////////////////////////
////// Autogenerated by JaySvcUtil.exe http://JayData.org for more info        /////////
//////                             oData Unknown                                    /////////
//////////////////////////////////////////////////////////////////////////////////////*/
(function(global, $data, undefined) {

    
  $data.Entity.extend('Bigrivers.Server.Model.Artist', {
     'Id': { 'key':true,'type':'Edm.Int32','nullable':false,'required':true },
     'Name': { 'type':'Edm.String' },
     'Description': { 'type':'Edm.String' },
     'Avatar': { 'type':'Edm.String' },
     'YoutubeChannel': { 'type':'Edm.String' },
     'Website': { 'type':'Edm.String' },
     'Facebook': { 'type':'Edm.String' },
     'Twitter': { 'type':'Edm.String' },
     'Status': { 'type':'Edm.Boolean','nullable':false,'required':true },
     'Performances': { 'type':'Array','elementType':'Bigrivers.Server.Model.Performance' },
     'Genres': { 'type':'Array','elementType':'Bigrivers.Server.Model.Genre' }
  });

  $data.Entity.extend('Bigrivers.Server.Model.Event', {
     'Id': { 'key':true,'type':'Edm.Int32','nullable':false,'required':true },
     'Title': { 'type':'Edm.String' },
     'ShortDescription': { 'type':'Edm.String' },
     'Description': { 'type':'Edm.String' },
     'Image': { 'type':'Edm.String' },
     'Start': { 'type':'Edm.DateTimeOffset','nullable':false,'required':true },
     'End': { 'type':'Edm.DateTimeOffset','nullable':false,'required':true },
     'Price': { 'type':'Edm.Decimal','nullable':false,'required':true },
     'TicketRequired': { 'type':'Edm.Boolean','nullable':false,'required':true },
     'Status': { 'type':'Edm.Boolean','nullable':false,'required':true },
     'Performances': { 'type':'Array','elementType':'Bigrivers.Server.Model.Performance' },
     'Location': { 'type':'Bigrivers.Server.Model.Location' }
  });

  $data.Entity.extend('Bigrivers.Server.Model.Genre', {
     'Id': { 'key':true,'type':'Edm.Int32','nullable':false,'required':true },
     'Name': { 'type':'Edm.String' },
     'Artists': { 'type':'Array','elementType':'Bigrivers.Server.Model.Artist' }
  });

  $data.Entity.extend('Bigrivers.Server.Model.Location', {
     'Id': { 'key':true,'type':'Edm.Int32','nullable':false,'required':true },
     'Street': { 'type':'Edm.String' },
     'Zipcode': { 'type':'Edm.String' },
     'City': { 'type':'Edm.String' },
     'Stagename': { 'type':'Edm.String' },
     'Status': { 'type':'Edm.Boolean','nullable':false,'required':true },
     'Events': { 'type':'Array','elementType':'Bigrivers.Server.Model.Event' }
  });

  $data.Entity.extend('Bigrivers.Server.Model.Performance', {
     'Id': { 'key':true,'type':'Edm.Int32','nullable':false,'required':true },
     'Description': { 'type':'Edm.String' },
     'Start': { 'type':'Edm.DateTimeOffset','nullable':false,'required':true },
     'End': { 'type':'Edm.DateTimeOffset','nullable':false,'required':true },
     'Status': { 'type':'Edm.Boolean','nullable':false,'required':true },
     'Artist': { 'type':'Bigrivers.Server.Model.Artist' },
     'Event': { 'type':'Bigrivers.Server.Model.Event' }
  });

  $data.Entity.extend('Bigrivers.Server.Model.Sponsor', {
     'Id': { 'key':true,'type':'Edm.Int32','nullable':false,'required':true },
     'Name': { 'type':'Edm.String' },
     'Image': { 'type':'Edm.String' },
     'Url': { 'type':'Edm.String' },
     'Priority': { 'type':'Edm.Int32','nullable':false,'required':true },
     'Status': { 'type':'Edm.Boolean','nullable':false,'required':true }
  });

  $data.EntityContext.extend('Default.Container', {
     'Artists': { type: $data.EntitySet, elementType: Bigrivers.Server.Model.Artist},
     'Events': { type: $data.EntitySet, elementType: Bigrivers.Server.Model.Event},
     'Genres': { type: $data.EntitySet, elementType: Bigrivers.Server.Model.Genre},
     'Locations': { type: $data.EntitySet, elementType: Bigrivers.Server.Model.Location},
     'Performances': { type: $data.EntitySet, elementType: Bigrivers.Server.Model.Performance},
     'Sponsors': { type: $data.EntitySet, elementType: Bigrivers.Server.Model.Sponsor}
  });

  $data.generatedContexts = $data.generatedContexts || [];
  $data.generatedContexts.push(Default.Container);
  
      
})(window, $data);
      
    